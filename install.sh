#!/bin/bash
# Fuzzy Drunk Finder Installer
# This script handles installation of Fuzzy Drunk Finder

VERSION="1.2.0"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DEFAULT_INSTALL_DIR="/usr/local/bin"
DEFAULT_CONFIG_DIR="/etc/fdf"
USER_INSTALL_DIR="$HOME/.local/bin"
USER_CONFIG_DIR="$HOME/.config/fdf"

# Color output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}=========================================${NC}"
    echo -e "${BLUE}    Fuzzy Drunk Finder Installer v$VERSION    ${NC}"
    echo -e "${BLUE}=========================================${NC}"
    echo ""
}

print_success() {
    echo -e "${GREEN}✓ $1${NC}"
}

print_error() {
    echo -e "${RED}✗ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}! $1${NC}"
}

print_info() {
    echo -e "${BLUE}i $1${NC}"
}

check_dependencies() {
    local missing=0
    
    echo "Checking dependencies..."
    
    # Check for fzf
    if ! command -v fzf &> /dev/null; then
        print_error "fzf is not installed. Fuzzy Drunk Finder requires fzf to work."
        echo "  Install with your package manager:"
        echo "    - Ubuntu/Debian: sudo apt install fzf"
        echo "    - Fedora: sudo dnf install fzf"
        echo "    - Arch: sudo pacman -S fzf"
        echo "    - macOS: brew install fzf"
        missing=1
    else
        print_success "fzf is installed."
    fi
    
    # Check for find
    if ! command -v find &> /dev/null; then
        print_error "find command not found. This is usually part of the system."
        missing=1
    else
        print_success "find command is available."
    fi
    
    # Check for sed
    if ! command -v sed &> /dev/null; then
        print_error "sed command not found. This is usually part of the system."
        missing=1
    else
        print_success "sed command is available."
    fi
    
    # Check for standard UNIX tools
    for cmd in grep cat mkdir; do
        if ! command -v $cmd &> /dev/null; then
            print_error "$cmd command not found. This is usually part of the system."
            missing=1
        else
            print_success "$cmd command is available."
        fi
    done
    
    return $missing
}

create_wrapper() {
    local target="$1"
    local source_dir="$2"
    
    cat > "$target" << EOL
#!/bin/bash
# Fuzzy Drunk Finder Wrapper
# Auto-generated by installer

# Source the main script
source "$source_dir/fuzzy-drunk-finder.sh"

# Pass through all arguments
fdf "\$@"
EOL

    chmod +x "$target"
}

install_system() {
    print_info "Performing system-wide installation..."
    
    # Check if we have sudo rights
    if ! sudo -v; then
        print_error "System-wide installation requires sudo privileges."
        return 1
    fi
    
    # Create installation directories
    sudo mkdir -p "$DEFAULT_INSTALL_DIR"
    sudo mkdir -p "$DEFAULT_CONFIG_DIR"
    sudo mkdir -p "/usr/share/doc/fdf"
    
    # Copy scripts to installation directory
    print_info "Copying files..."
    sudo cp -r "$SCRIPT_DIR/lib" "$DEFAULT_CONFIG_DIR/"
    sudo cp "$SCRIPT_DIR/fuzzy-drunk-finder.sh" "$DEFAULT_CONFIG_DIR/"
    
    # Create wrapper script
    print_info "Creating launcher script..."
    sudo bash -c "$(declare -f create_wrapper); create_wrapper \"$DEFAULT_INSTALL_DIR/fdf\" \"$DEFAULT_CONFIG_DIR\""
    
    # Copy documentation
    if [ -f "$SCRIPT_DIR/README.md" ]; then
        sudo cp "$SCRIPT_DIR/README.md" "/usr/share/doc/fdf/"
    fi
    
    # Create default config
    print_info "Creating default configuration..."
    if [ ! -f "$DEFAULT_CONFIG_DIR/config" ]; then
        cat | sudo tee "$DEFAULT_CONFIG_DIR/config" > /dev/null << EOL
# Fuzzy Drunk Finder System Configuration
# Created on $(date)

# Default depth for directory searches
DEPTH=3

# Show hidden directories by default (true/false)
SHOW_HIDDEN=false

# Use and update directory history (true/false)
USE_HISTORY=true

# Cache timeout in seconds (3600 = 1 hour)
CACHE_TIMEOUT=3600

# Maximum depth for home directories when unlimited is set
MAX_DEPTH_HOME=7
EOL
    fi
    
    print_success "System-wide installation complete!"
    print_info "You can now run 'fdf' from anywhere."
}

install_user() {
    print_info "Performing user-local installation..."
    
    # Create installation directories
    mkdir -p "$USER_INSTALL_DIR"
    mkdir -p "$USER_CONFIG_DIR"
    
    # Copy scripts to installation directory
    print_info "Copying files..."
    cp -r "$SCRIPT_DIR/lib" "$USER_CONFIG_DIR/"
    cp "$SCRIPT_DIR/fuzzy-drunk-finder.sh" "$USER_CONFIG_DIR/"
    
    # Create wrapper script
    print_info "Creating launcher script..."
    create_wrapper "$USER_INSTALL_DIR/fdf" "$USER_CONFIG_DIR"
    
    # Create default config
    print_info "Creating default configuration..."
    if [ ! -f "$USER_CONFIG_DIR/config" ]; then
        cat > "$USER_CONFIG_DIR/config" << EOL
# Fuzzy Drunk Finder User Configuration
# Created on $(date)

# Default depth for directory searches
DEPTH=3

# Show hidden directories by default (true/false)
SHOW_HIDDEN=false

# Use and update directory history (true/false)
USE_HISTORY=true

# Cache timeout in seconds (3600 = 1 hour)
CACHE_TIMEOUT=3600

# Maximum depth for home directories when unlimited is set
MAX_DEPTH_HOME=7
EOL
    fi
    
    # Add to PATH if not already
    if [[ ":$PATH:" != *":$USER_INSTALL_DIR:"* ]]; then
        print_warning "Your ~/.local/bin directory is not in your PATH."
        echo "Add the following line to your ~/.bashrc or ~/.zshrc to make fdf available:"
        echo "  export PATH=\"\$HOME/.local/bin:\$PATH\""
        
        read -r -p "Would you like me to add this to your shell configuration now? [y/N] " response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            if [ -n "$SHELL" ] && [[ "$SHELL" == */zsh ]]; then
                echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$HOME/.zshrc"
                print_success "Added to ~/.zshrc"
            else
                echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$HOME/.bashrc"
                print_success "Added to ~/.bashrc"
            fi
            print_info "You'll need to restart your shell or run 'source ~/.bashrc' (or ~/.zshrc) for the changes to take effect."
        fi
    else
        print_success "Your ~/.local/bin directory is already in your PATH."
    fi
    
    print_success "User-local installation complete!"
    print_info "You can now run 'fdf' from anywhere (you may need to restart your shell first)."
}

create_curl_installer() {
    print_info "Creating curl/wget one-line installer..."
    
    # Create the install_remote.sh script
    cat > "$SCRIPT_DIR/install_remote.sh" << 'EOL'
#!/bin/bash
# Fuzzy Drunk Finder Remote Installer
# To use: curl -sSL https://raw.githubusercontent.com/yourusername/fuzzy-drunk-finder/main/install_remote.sh | bash

set -e

# Color output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_info() {
    echo -e "${BLUE}i $1${NC}"
}

print_success() {
    echo -e "${GREEN}✓ $1${NC}"
}

print_error() {
    echo -e "${RED}✗ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}! $1${NC}"
}

# Check for required tools
for cmd in git curl mkdir chmod; do
    if ! command -v $cmd &> /dev/null; then
        print_error "$cmd command not found. Please install it and try again."
        exit 1
    fi
done

# Check for fzf
if ! command -v fzf &> /dev/null; then
    print_warning "fzf is not installed. Fuzzy Drunk Finder requires fzf to work."
    echo "  Install with your package manager:"
    echo "    - Ubuntu/Debian: sudo apt install fzf"
    echo "    - Fedora: sudo dnf install fzf"
    echo "    - Arch: sudo pacman -S fzf"
    echo "    - macOS: brew install fzf"
    read -r -p "Continue anyway? [y/N] " response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Set up temporary directory
TMP_DIR=$(mktemp -d)
trap 'rm -rf "$TMP_DIR"' EXIT

print_info "Downloading Fuzzy Drunk Finder..."

# Clone the repository
git clone --depth 1 https://github.com/yourusername/fuzzy-drunk-finder.git "$TMP_DIR" >/dev/null 2>&1 || {
    print_error "Failed to download Fuzzy Drunk Finder."
    exit 1
}

# Run the installer
cd "$TMP_DIR"
chmod +x install.sh
./install.sh

print_success "Installation completed!"
EOL

    chmod +x "$SCRIPT_DIR/install_remote.sh"
    print_success "Remote installer created at $SCRIPT_DIR/install_remote.sh"
    print_info "To publish, upload this script to your GitHub repository."
    print_info "Users can install with: curl -sSL https://raw.githubusercontent.com/yourusername/fuzzy-drunk-finder/main/install_remote.sh | bash"
}

create_package_files() {
    print_info "Creating packaging files for distribution..."
    
    # Create directory for package files
    mkdir -p "$SCRIPT_DIR/packaging"
    
    # Create README.md if it doesn't exist
    if [ ! -f "$SCRIPT_DIR/README.md" ]; then
        cat > "$SCRIPT_DIR/README.md" << EOL
# Fuzzy Drunk Finder

A powerful terminal navigator with fuzzy search capabilities.

## Features

- Fuzzy search through directories
- History tracking of visited directories
- Caching for performance
- Hidden directory support
- Configurable search depth

## Installation

### Via curl (recommended)

```bash
curl -sSL https://raw.githubusercontent.com/yourusername/fuzzy-drunk-finder/main/install_remote.sh | bash
```

### Manual Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/fuzzy-drunk-finder.git
   ```

2. Run the installer:
   ```bash
   cd fuzzy-drunk-finder
   ./install.sh
   ```

## Usage

```bash
# Basic usage
fdf

# Start from a specific directory
fdf ~/Documents

# Show hidden directories
fdf --hidden

# Search deeper (5 levels)
fdf --depth 5

# No depth restriction
fdf --unlimited
```

## Configuration

Edit your configuration file:
```bash
fdf_config
```

## License

MIT
EOL
    fi
    
    # Create Homebrew formula
    cat > "$SCRIPT_DIR/packaging/fuzzy-drunk-finder.rb" << EOL
class FuzzyDrunkFinder < Formula
  desc "Powerful terminal navigator with fuzzy search capabilities"
  homepage "https://github.com/yourusername/fuzzy-drunk-finder"
  url "https://github.com/yourusername/fuzzy-drunk-finder/archive/v${VERSION}.tar.gz"
  sha256 "REPLACE_WITH_ACTUAL_SHA256" # Update this with actual SHA
  license "MIT"
  
  depends_on "fzf"
  
  def install
    libexec.install Dir["*"]
    bin.write_exec_script (libexec/"install.sh")
    
    # Create wrapper script
    (bin/"fdf").write <<~EOS
      #!/bin/bash
      source #{libexec}/fuzzy-drunk-finder.sh
      fdf "$@"
    EOS
  end
  
  test do
    assert_match "Fuzzy Drunk Finder", shell_output("#{bin}/fdf --version")
  end
end
EOL
    
    # Create Debian/Ubuntu package files
    mkdir -p "$SCRIPT_DIR/packaging/debian/DEBIAN"
    cat > "$SCRIPT_DIR/packaging/debian/DEBIAN/control" << EOL
Package: fuzzy-drunk-finder
Version: ${VERSION}
Section: utils
Priority: optional
Architecture: all
Depends: bash, fzf
Maintainer: Your Name <your.email@example.com>
Description: Powerful terminal navigator with fuzzy search capabilities
 Fuzzy Drunk Finder is a command-line tool that allows users to
 quickly navigate between directories using fuzzy search.
 It features directory history tracking, search depth control,
 and caching for improved performance.
EOL
    
    # Create Arch PKGBUILD
    cat > "$SCRIPT_DIR/packaging/PKGBUILD" << EOL
# Maintainer: Your Name <your.email@example.com>
pkgname=fuzzy-drunk-finder
pkgver=${VERSION}
pkgrel=1
pkgdesc="Powerful terminal navigator with fuzzy search capabilities"
arch=('any')
url="https://github.com/yourusername/fuzzy-drunk-finder"
license=('MIT')
depends=('bash' 'fzf')
source=("\$pkgname-\$pkgver.tar.gz::https://github.com/yourusername/fuzzy-drunk-finder/archive/v\$pkgver.tar.gz")
sha256sums=('REPLACE_WITH_ACTUAL_SHA256') # Update this with actual SHA

package() {
  cd "\$pkgname-\$pkgver"
  
  # Create directories
  mkdir -p "\$pkgdir/usr/bin"
  mkdir -p "\$pkgdir/etc/fdf"
  mkdir -p "\$pkgdir/usr/share/doc/fdf"
  
  # Install files
  cp -r lib "\$pkgdir/etc/fdf/"
  cp fuzzy-drunk-finder.sh "\$pkgdir/etc/fdf/"
  cp README.md "\$pkgdir/usr/share/doc/fdf/"
  
  # Create wrapper script
  cat > "\$pkgdir/usr/bin/fdf" << EOF
#!/bin/bash
source /etc/fdf/fuzzy-drunk-finder.sh
fdf "\\\$@"
EOF
  chmod +x "\$pkgdir/usr/bin/fdf"
}
EOL
    
    print_success "Package files created in $SCRIPT_DIR/packaging/"
    print_info "You'll need to update GitHub URLs and SHA256 checksums before publishing."
}

show_menu() {
    echo ""
    echo "Please select an installation option:"
    echo "1) User-local installation (recommended)"
    echo "2) System-wide installation (requires sudo)"
    echo "3) Create curl/wget installer"
    echo "4) Create package files (for distribution)"
    echo "5) Exit"
    echo ""
    read -r -p "Enter your choice (1-5): " choice
    
    case $choice in
        1)
            install_user
            ;;
        2)
            install_system
            ;;
        3)
            create_curl_installer
            ;;
        4)
            create_package_files
            ;;
        5)
            echo "Exiting."
            exit 0
            ;;
        *)
            print_error "Invalid option. Please try again."
            show_menu
            ;;
    esac
}

# Main execution
print_header
check_dependencies || {
    print_warning "Some dependencies are missing. Installation may not work correctly."
    read -r -p "Continue anyway? [y/N] " response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "Exiting."
        exit 1
    fi
}

show_menu
